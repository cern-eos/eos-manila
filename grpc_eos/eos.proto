syntax = "proto3";
package eos.rpc;

enum MANILA_REQUEST_TYPE {
   CREATE_SHARE = 0;
   DELETE_SHARE = 1;
   EXTEND_SHARE = 2;
   SHRINK_SHARE = 3;
   MANAGE_EXISTING = 4;
   UNMANAGE = 5;
   GET_CAPACITIES = 6;

   /* EXTRA FUNCTIONS NOT IMPLEMENTED */
   /*
   CREATE_SNAPSHOT = 7;
   DELETE_SNAPSHOT = 8;
   CREATE_SHARE_FROM_SNAPSHOT = 9;
   ENSURE_SHARE = 10;
   ALLOW_ACCESS = 11;
   DENY_ACCESS = 12;
   GET_SHARE_STATS = 13;
   DO_SETUP = 14;
   SETUP_SERVER = 15;
   TEARDOWN_SERVER = 16;
   GET_NETWORK_ALLOCATIONS_NUMBER = 17;
   VERIFY_SHARE_SERVER_HANDLING = 18;
   CREATE_SHARE_GROUP = 19;
   DELETE_SHARE_GROUP = 20;
   */
}


message ManilaRequest {
   MANILA_REQUEST_TYPE request_type = 1;
   string auth_key = 2;
   string protocol = 3;
   string share_name = 4;
   string description = 5;
   string share_id = 6;
   string share_group_id = 7;
   int64 quota = 8;
   string creator = 9;
   string egroup = 10;
   string admin_egroup = 11;
   string share_host = 12;
   string share_location = 13;
}

message ManilaResponse {
   string msg = 1; //for generic messages
   int32 code = 2; // < 1 is an error -- > 1 is OK
   int64 total_used = 3;
   int64 total_capacity = 4;
   int64 new_share_quota = 5;
   string new_share_path = 6;
}

service Eos {
   rpc ManilaServerRequest(ManilaRequest) returns (ManilaResponse) {}
}

